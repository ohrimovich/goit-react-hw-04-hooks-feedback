{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistic/Statistic.js","components/Title/Title.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.scss"],"names":["FeedbackOptions","options","onLeavefeedback","className","s","container","map","option","type","button","onClick","nanoid","Statistic","good","neutral","bad","total","positivePercentage","protoTypes","PropTypes","number","isRequired","Title","text","string","Section","children","Notification","message","App","useState","setGood","setNeutral","setBad","calcTotalfeedbacks","label","Math","round","calcPositivePercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mSAeeA,MAXf,YAAsD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,gBAC/B,OAAQ,sBAAKC,UAAWC,IAAEC,UAAlB,cACJJ,EAAQK,KAAI,SAAAC,GAAM,OAAI,wBAAQC,KAAK,SAASL,UAAWC,IAAEK,OAAuBC,QAAS,kBAAMR,EAAgBK,IAAzF,SAAmGA,GAAnDI,sB,gBCH9E,SAASC,EAAT,GAAsE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAE5C,OAEI,gCACA,sCAASJ,EAAT,OACA,yCAAYC,KACZ,qCAAQC,EAAR,OACA,uCAAUC,EAAV,OACA,oDAAwBC,EAAxB,UAKRL,EAAUM,WAAa,CACnBL,KAAMM,IAAUC,OAAOC,WACvBP,QAASK,IAAUC,OAAOC,WAC1BN,IAAKI,IAAUC,OAAOC,WACtBL,MAAOG,IAAUC,OAAOC,WACxBJ,mBAAoBE,IAAUC,OAAOC,YAI1BT,QCxBf,SAASU,EAAT,GAAwB,IAARC,EAAO,EAAPA,KACZ,OACI,6BAAKA,IAIbD,EAAMJ,WAAa,CACfK,KAAMJ,IAAUK,OAAOH,YAGZC,QCIAG,MAZf,YAAsC,IAAnBF,EAAkB,EAAlBA,KAAMG,EAAY,EAAZA,SACrB,OACA,oCACQ,cAAC,EAAD,CAAOH,KAAOA,IACjBG,MCMMC,MAXf,YAAkC,IAAXC,EAAU,EAAVA,QAEnB,OACI,4BAAIA,KCsDGC,MArDf,WAEE,MAAwBC,mBAAS,GAAjC,mBAAOjB,EAAP,KAAakB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOhB,EAAP,KAAgBkB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOf,EAAP,KAAYkB,EAAZ,KAGMC,EAAqB,SAACrB,EAAMC,EAASC,GACzC,OAAOF,EAAOC,EAAUC,GAwBxB,OACE,sBAAKZ,UAAU,MAAf,UACE,cAAC,EAAD,CAASoB,KAAK,6BAAd,SACE,cAAC,EAAD,CAAiBtB,QAAS,CAAC,OAAO,UAAU,OAAQC,gBApBpC,SAACiC,GACvB,OAAQA,GACN,IAAK,OACHJ,EAAQlB,EAAO,GACf,MACF,IAAK,UACHmB,EAAWlB,EAAU,GACrB,MACF,IAAK,MACHmB,EAAOlB,EAAM,GACb,MACF,QACE,aAWA,cAAC,EAAD,CAASQ,KAAK,YAAd,SACE,8BAEa,IAATV,GAA0B,IAAZC,GAAyB,IAARC,EAC7B,cAAC,EAAD,CAAca,QAAQ,sBACxB,cAAC,EAAD,CAAWf,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAC1CC,MAAOkB,EAAmBrB,EAAMC,EAASC,GAAME,mBAjChC,SAACJ,GAC9B,OAAOuB,KAAKC,MAAMxB,EAAOqB,EAAmBrB,EAAMC,EAASC,GAAO,KAgCeuB,CAAuBzB,aC9C5G0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,mC","file":"static/js/main.381b4236.chunk.js","sourcesContent":["import { nanoid } from 'nanoid';\r\nimport s from \"./FeedbackOptions.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction FeedbackOptions({options, onLeavefeedback}) {\r\n    return (<div className={s.container}> {\r\n        options.map(option => <button type='button' className={s.button} key={nanoid()} onClick={() => onLeavefeedback(option)}>{option}</button>)\r\n    }\r\n    </div>\r\n        )\r\n} \r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    onLeavefeedback: PropTypes.func\r\n   }\r\nexport default FeedbackOptions;\r\n   \r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Statistic({ good, neutral, bad, total, positivePercentage}) {\r\n    \r\n    return (\r\n        \r\n        <div>\r\n        <p>Good:{good} </p>\r\n        <p>Neutral:{neutral}</p>\r\n        <p>Bad:{bad} </p>\r\n        <p>Total:{total} </p>\r\n        <p>Positive feedbaks: { positivePercentage}%</p>\r\n            </div>\r\n    )\r\n}\r\n\r\nStatistic.protoTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired\r\n\r\n}\r\n\r\nexport default Statistic;","import PropTypes from \"prop-types\";\r\n\r\nfunction Title({text}) {\r\n    return (\r\n        <h1>{text}</h1>\r\n    )\r\n}\r\n\r\nTitle.protoTypes = {\r\n    text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Title;","import React from \"react\";\r\nimport Title from \"../Title/Title\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Section({ text, children }) {\r\n    return (\r\n    <section>\r\n            <Title text={ text}/>\r\n        {children}\r\n    </section>\r\n )\r\n}\r\n\r\nSection.propTypes = {\r\n    text: PropTypes.string.isRequired\r\n}\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Notification({message}) {\r\n    \r\n    return (\r\n        <p>{message}</p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Notification;","import \"./App.css\";\nimport { useState} from 'react'\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistic from \"./components/Statistic/Statistic\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\n\nfunction App () {\n \n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n\n  const calcTotalfeedbacks = (good, neutral, bad) => {\n    return good + neutral + bad;\n  }\n\n  const calcPositivePercentage = (good ) =>  {\n    return Math.round(good / calcTotalfeedbacks(good, neutral, bad) * 100);\n  }\n\n  const onLeaveFeedback = (label) => {\n    switch (label) {\n      case 'good':\n        setGood(good + 1)\n        break;\n      case 'neutral':\n        setNeutral(neutral + 1)\n        break;\n      case 'bad':\n        setBad(bad + 1)\n        break;\n      default:\n        return;\n   }\n  }\n\n  \n    return (\n      <div className='App'>\n        <Section text='Please leave your feedback'>\n          <FeedbackOptions options={['good','neutral','bad']} onLeavefeedback={onLeaveFeedback} />\n        </Section>\n       \n        <Section text='Statistic'>\n          <div>\n            {\n              good === 0 && neutral === 0 && bad === 0 ?\n                <Notification message=\"No feedback given\" /> :\n              <Statistic good={good} neutral={neutral} bad={bad}\n                  total={calcTotalfeedbacks(good, neutral, bad)} positivePercentage={calcPositivePercentage(good)} />\n            }\n        </div>\n      </Section>\n      </div>\n    )\n  }\n\n\nexport default App;\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__o9vKP\",\"button\":\"FeedbackOptions_button__3Wh9u\"};"],"sourceRoot":""}